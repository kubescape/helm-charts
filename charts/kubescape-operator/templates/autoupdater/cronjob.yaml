{{- $components := fromYaml (include "components" .) }}
{{- if $components.autoUpdater.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.helmReleaseUpgrader.name }}
  namespace: {{ .Values.ksNamespace }}
  labels:
    {{- include "kubescape-operator.labels" (dict "Chart" .Chart "Release" .Release "Values" .Values "app" .Values.helmReleaseUpgrader.name "tier" .Values.global.namespaceTier) | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
spec:
  schedule: {{ .Values.helmReleaseUpgrader.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.helmReleaseUpgrader.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.helmReleaseUpgrader.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "kubescape-operator.labels" (dict "Chart" .Chart "Release" .Release "Values" .Values "app" .Values.helmReleaseUpgrader.name "tier" .Values.global.namespaceTier) | nindent 12 }}
        spec:
          serviceAccountName: {{ .Values.helmReleaseUpgrader.name }}
          securityContext:
            seccompProfile:
              type: Unconfined
            runAsNonRoot: true
            # User and Group IDs as defined in the Helm Release Upgrader image
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumes:
            - name: "helm-scratch-data"
              emptyDir:
                sizeLimit: 500Mi
          containers:
          - name: {{ .Values.helmReleaseUpgrader.name }}
            image: {{ printf "%s:%s" .Values.helmReleaseUpgrader.image.repository .Values.helmReleaseUpgrader.image.tag  | quote }}
            imagePullPolicy: {{ .Values.helmReleaseUpgrader.image.pullPolicy | quote }}
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
            volumeMounts:
              - name: "helm-scratch-data"
                mountPath: /data/helm-scratch-data
            env:
              - name: "HELM_CACHE_HOME"
                value: "/data/helm-scratch-data/.cache"
              - name: "HELM_CONFIG_HOME"
                value: "/data/helm-scratch-data/.config"
              - name: "HELM_DATA_HOME"
                value: "/data/helm-scratch-data/.data"
            resources:
{{ toYaml .Values.helmReleaseUpgrader.resources | indent 14 }}
          restartPolicy: OnFailure
          nodeSelector:
          {{- if .Values.helmReleaseUpgrader.nodeSelector }}
          {{- toYaml .Values.helmReleaseUpgrader.nodeSelector | nindent 12 }}
          {{- else if .Values.customScheduling.nodeSelector }}
          {{- toYaml .Values.customScheduling.nodeSelector | nindent 12 }}
          {{- end }}
          affinity:
          {{- if .Values.helmReleaseUpgrader.affinity }}
          {{- toYaml .Values.helmReleaseUpgrader.affinity | nindent 12 }}
          {{- else if .Values.customScheduling.affinity }}
          {{- toYaml .Values.customScheduling.affinity | nindent 12 }}
          {{- end }}
          tolerations:
          {{- if .Values.helmReleaseUpgrader.tolerations }}
          {{- toYaml .Values.helmReleaseUpgrader.tolerations | nindent 12 }}
          {{- else if .Values.customScheduling.tolerations }}
          {{- toYaml .Values.customScheduling.tolerations | nindent 12 }}
          {{- end }}
{{ end }}
