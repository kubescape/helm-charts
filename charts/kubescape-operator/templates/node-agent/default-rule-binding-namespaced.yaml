{{- if and .Values.alertCRD.installDefault .Values.alertCRD.scopeNamespaced }}
apiVersion: kubescape.io/v1
kind: RuntimeRuleAlertBinding
metadata:
  name: all-rules-default-namespace
  namespace: {{ .Values.ksNamespace }}
  labels:
    {{- include "kubescape-operator.labels" (dict "Chart" .Chart "Release" .Release "Values" .Values "app" .Values.nodeAgent.name "tier" .Values.global.namespaceTier) | nindent 4 }}
spec:
  rules:
    - ruleName: "Unexpected process launched"
    - ruleName: "Unexpected file access"
      parameters:
        ignoreMounts: true
        ignorePrefixes: ["/proc", "/run/secrets/kubernetes.io/serviceaccount", "/var/run/secrets/kubernetes.io/serviceaccount", "/tmp"]
    - ruleName: "Unexpected system call"
    - ruleName: "Unexpected capability used"
    - ruleName: "Unexpected domain request"
    - ruleName: "Unexpected Service Account Token Access"
    - ruleName: "Kubernetes Client Executed"
    - ruleName: "Exec from malicious source"
    - ruleName: "Kernel Module Load"
    - ruleName: "Exec Binary Not In Base Image"
    # - ruleName: "Malicious SSH Connection"
    - ruleName: "Fileless Execution"
    - ruleName: "XMR Crypto Mining Detection"
    - ruleName: "Exec from mount"
    - ruleName: "Crypto Mining Related Port Communication"
    - ruleName: "Crypto Mining Domain Communication"
    - ruleName: "Read Environment Variables from procfs"
    - ruleName: "eBPF Program Load"
    - ruleName: "Symlink Created Over Sensitive File"
    - ruleName: "Unexpected Sensitive File Access"
    - ruleName: "Hardlink Created Over Sensitive File"
    - ruleName: "Exec to pod"
    - ruleName: "Port forward"
    # - ruleName: "Unexpected Egress Network Traffic"
    - ruleName: "Malicious Ptrace Usage"
    - ruleName: "Cross-Site Scripting (XSS) Attempt"
    - ruleName: "SQL Injection Attempt"
    - ruleName: "Server-Side Request Forgery Attack Attempt"
    - ruleName: "Remote File Inclusion Attack Attempt"
    - ruleName: "Local File Inclusion Attempt"
    - ruleName: "XML External Entity Attack Attempt"
    - ruleName: "Server-Side Template Injection Attack"
    - ruleName: "Command Injection Attempt"
{{- end }}
