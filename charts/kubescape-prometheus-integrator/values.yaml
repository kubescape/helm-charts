# Default values for KS chart.

ksNamespace: kubescape-prometheus
ksLabel: kubescape
createKubescapeServiceAccount: true # TODO: move to kubescape

# -- set the image pull secrets for private registry support 
imagePullSecrets: ""

# cloud support
cloudProviderMetadata:

  # -- cloud provider engine
  cloudProviderEngine:

  # -- cloud region
  cloudRegion:

  # -- AWS IAM arn role
  awsIamRoleArn:

  # -- GKE service account
  gkeServiceAccount:

  # -- GKE project
  gkeProject:

  # -- AKS subscription ID
  aksSubscriptionID:

  # -- AKS resource group
  aksResourceGroup:
 
# Additional volumes applied to all containers
volumes: []

# Additional volumeMounts applied to all containers
volumeMounts: []

global:
  namespaceTier: ks-prometheus
 
# kubescape scanner - https://github.com/kubescape/kubescape
kubescape:

  # -- enable/disable kubescape scanning
  enabled: true

  name: kubescape

  image:
    # -- source code: https://github.com/kubescape/kubescape/tree/master/httphandler (public repo)
    repository: quay.io/kubescape/kubescape
    tag: v2.3.5
    pullPolicy: IfNotPresent

  resources:
    requests:
       cpu: 250m
       memory: 400Mi
    limits:
       cpu: 600m
       memory: 1Gi

  # -- enable host scanner feature: https://hub.armosec.io/docs/host-sensor
  enableHostScan: false

  # -- download policies every scan, we recommend it should remain true, you should change to 'false' when running in an air-gapped environment or when scanning with high frequency (when running with Prometheus)
  downloadArtifacts: false

  # -- skip check for a newer version 
  skipUpdateCheck: true

  # -- set the number of concurrent goroutines to process OPA rules
  ruleProcessingConcurrency: 1
  
  # -- submit results to the Kubescape cloud: https://cloud.armosec.io/
  submit: false

  # -- list of namespaces to include
  includeNamespaces: []

  # -- List of namespaces to exclude
  excludeNamespaces: []

  replicaCount: 1

  service:
    type: ClusterIP
    port: 8080

  # deploy a service monitor for prometheus (operator) integration
  serviceMonitor:
    
    # -- enable/disable service monitor for prometheus (operator) integration
    enabled: true

    # -- scrape interval
    interval: 20m

    # -- adjust to avoid timeout
    scrapeTimeout: 100s

    # If needed the service monitor can be deployed to a different namespace than the one kubescape is in
    #namespace: my-namespace
  
  # Enable prometheus pod annotations,to allow your opensource prometheus (not operator) to scrape metrics
  prometheusAnnotation:
    enabled: false
  # -- Additional volumes to be mounted on Kubescape
  volumes: []

  # -- Additional volumeMounts to be mounted on Kubescape
  volumeMounts: []

kubescapeHostScanner:
  # Additional volumes to be mounted on the Kubescape host scanner
  volumes: []

  # Additional volumeMounts to be mounted on the Kubescape host scanner
  volumeMounts: []
